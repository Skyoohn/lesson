package com.example.thsmanager.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

import com.example.thsmanager.entity.TorihikisakiMain;
import com.example.thsmanager.entity.TorihikisakiMainExample;

@Mapper
public interface TorihikisakiMainMapper {
	@Select("select * from torihikisaki_main")
	List<TorihikisakiMain> selectTorihikisakiMains();
	
    @Select("SELECT TM.*, TT.* " +
            "FROM TORIHIKISAKI_MAIN TM " +
            "INNER JOIN TORIHIKISAKI_TANTOU TT ON TM.TORIHIKI_ID = TT.TORIHIKI_ID " +
            "WHERE TM.TORIHIKI_ID = #{torihikiId}")
    @Results({
        @Result(property = "torihikiId", column = "TORIHIKI_ID"),
        // 다른 필드들에 대한 매핑 추가
        @Result(property = "tantouId", column = "TANTOU_ID"),
        // TORIHIKISAKI_TANTOU의 필드들에 대한 매핑 추가
})
	TorihikisakiMain selectTorihikisakiMain(Integer torihikiId);
	
	@Insert("insert into torihikisaki_main(TORIHIKI_NAME_ALL, TORIHIKI_RYAKU, YUUBIN, JYUSYO_1, JYUSYO_2,"
	        + "TEL, FAX, URL, BIKOU, SEIKYUSYOU_KUBUN_1, SEIKYUSYOU_KUBUN_2, SEIKYUSYOU_KUBUN_3, SEIKYUSYOU_KUBUN_4, SEIKYUSYOU_KUBUN_5,"
	        + "SEIKYUSYOU_KUBUN_6, HONSYA, HONSYA_KOUZA, KINYUKIKAN_CODE, KINYUKIKAN_NAME, SITEN_CODE,"
	        + "SITEN_NAME, KOUZA_KIND, KOUZA_NUM, MEIGI_NAME)"
	        + "values(#{torihikiNameAll}, #{torihikiRyaku}, #{yuubin}, #{jyusyo1}, #{jyusyo2}, #{tel}, #{fax}"
	        + ", #{url}, #{bikou}, #{seikyusyouKubun1}, #{seikyusyouKubun2}, #{seikyusyouKubun3}, #{seikyusyouKubun4}, #{seikyusyouKubun5},"
	        + "#{seikyusyouKubun6}, #{honsya}, #{honsyaKouza}, #{kinyukikanCode}, #{kinyukikanName}, #{sitenCode}"
	        + ", #{sitenName}, #{kouzaKind}, #{kouzaNum}, #{meigiName})")
	void addTorihikisakiMain(TorihikisakiMain torihikisakiMain);

	
	@Update("update torihikisaki_main set TORIHIKI_NAME_ALL=#{torihikiNameAll},"
			+ "TORIHIKI_RYAKU=#{torihikiRyaku},YUUBIN=#{yuubin},JYUSYO_1=#{jyusyo1},JYUSYO_2=#{jyusyo2},"
			+ "TEL=#{tel},FAX=#{fax},URL=#{url},BIKOU=#{bikou},SEIKYUSYOU_KUBUN_1=#{seikyusyouKubun1},"
			+ "SEIKYUSYOU_KUBUN_2=#{seikyusyouKubun2},SEIKYUSYOU_KUBUN_3=#{seikyusyouKubun3},SEIKYUSYOU_KUBUN_4=#{seikyusyouKubun4},"
			+ "SEIKYUSYOU_KUBUN_5=#{seikyusyouKubun5},"
			+ "SEIKYUSYOU_KUBUN_6=#{seikyusyouKubun6},"
			+ "KINYUKIKAN_CODE=#{kinyukikanCode},KINYUKIKAN_NAME=#{kinyukikanName},SITEN_CODE=#{sitenCode},SITEN_NAME=#{sitenName},"
			+ "KOUZA_KIND=#{kouzaKind},KOUZA_NUM=#{kouzaNum},MEIGI_NAME=#{meigiName},KOUSINBI=#{kousinbi}")
	void updateTorihikisakiMain(TorihikisakiMain torihikisakiMain);
	
	@Delete("delete from torihikisaki_main where TORIHIKI_ID=#{torihikiId}")
	void delTorihikisakiMain(Integer torihikiId);
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table torihikisaki_main
     *
     * @mbg.generated Sun Dec 24 12:48:52 KST 2023
     */
    long countByExample(TorihikisakiMainExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table torihikisaki_main
     *
     * @mbg.generated Sun Dec 24 12:48:52 KST 2023
     */
    int deleteByExample(TorihikisakiMainExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table torihikisaki_main
     *
     * @mbg.generated Sun Dec 24 12:48:52 KST 2023
     */
    int deleteByPrimaryKey(Integer torihikiId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table torihikisaki_main
     *
     * @mbg.generated Sun Dec 24 12:48:52 KST 2023
     */
    int insert(TorihikisakiMain row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table torihikisaki_main
     *
     * @mbg.generated Sun Dec 24 12:48:52 KST 2023
     */
    int insertSelective(TorihikisakiMain row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table torihikisaki_main
     *
     * @mbg.generated Sun Dec 24 12:48:52 KST 2023
     */
    List<TorihikisakiMain> selectByExample(TorihikisakiMainExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table torihikisaki_main
     *
     * @mbg.generated Sun Dec 24 12:48:52 KST 2023
     */
    TorihikisakiMain selectByPrimaryKey(Integer torihikiId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table torihikisaki_main
     *
     * @mbg.generated Sun Dec 24 12:48:52 KST 2023
     */
    int updateByExampleSelective(@Param("row") TorihikisakiMain row, @Param("example") TorihikisakiMainExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table torihikisaki_main
     *
     * @mbg.generated Sun Dec 24 12:48:52 KST 2023
     */
    int updateByExample(@Param("row") TorihikisakiMain row, @Param("example") TorihikisakiMainExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table torihikisaki_main
     *
     * @mbg.generated Sun Dec 24 12:48:52 KST 2023
     */
    int updateByPrimaryKeySelective(TorihikisakiMain row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table torihikisaki_main
     *
     * @mbg.generated Sun Dec 24 12:48:52 KST 2023
     */
    int updateByPrimaryKey(TorihikisakiMain row);
}